bridges {
  timescale {
    "my-timescaledb" {
      database = "iot_data"
      enable = true
      password = "public"
      pool_size = 8
      resource_opts {
        auto_restart_interval = "60s"
        batch_size = 1
        batch_time = "0ms"
        health_check_interval = "15s"
        inflight_window = 100
        max_buffer_bytes = "256MB"
        query_mode = "async"
        request_timeout = "15s"
        start_after_created = "true"
        start_timeout = "5s"
        worker_pool_size = 16
      }
      server = "timescaledb:5432"
      sql = "INSERT INTO energy_log (factory_id, factory, air_compressor_1, air_compressor_2, lighting, cooling_equipment, heating_equipment, conveyor, coating_equipment, inspection_equipment, welding_equipment, packaging_equipment, cutting_equipment, timestamp) \nVALUES (${payload.factory_id}, ${payload.factory}, ${payload.values.air_compressor_1}, ${payload.values.air_compressor_2}, ${payload.values.lighting}, ${payload.values.cooling_equipment}, ${payload.values.heating_equipment}, ${payload.values.conveyor}, ${payload.values.coating_equipment}, ${payload.values.inspection_equipment}, ${payload.values.welding_equipment}, ${payload.values.packaging_equipment}, ${payload.values.cutting_equipment}, to_timestamp(${payload.timestamp} / 1000.0));\n"
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = "5s"
        reuse_sessions = true
        secure_renegotiate = true
        verify = "verify_peer"
        versions = ["tlsv1.3", "tlsv1.2", "tlsv1.1", "tlsv1"]
      }
      username = "admin"
    }
  }
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = "10s"
  rules {
    "data-to-timescaledb" {
      actions = ["timescale:my-timescaledb"]
      description = ""
      metadata {created_at = 1684146850243}
      sql = "SELECT\n  *\nFROM\n  \"mqttx/simulate/#\""
    }
  }
}
